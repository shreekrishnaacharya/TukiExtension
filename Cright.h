/**
 *  Cright.h
 * 
 *  Class that is exported to PHP space
 * 
 *  @author Krishna Acharya 
 *  @copyright 2018
 */

/**
 *  Include guard
 */
#pragma once

/**
 *  Class definition
 */
class Cright : public Php::Base {
private:
    /**
     *  @var Php::Value
     */
public:

    std::string version;
    std::string developer;
    std::string email;
    std::string agreement;
    std::string copyright;

    /**
     *  Constructor and destructor
     */
    Cright() {
        version = "6.0.1";
        copyright = "copyright to Shree Krishna Acharya 2018";
        developer = "Shree Krishna Acharya";
        email = "sksharma72000@gmail.com";
        agreement = "This application is developed by Shree Krishna Acharya, Gaindakot-5, Nawalpur, Nepal and distributed by Eagle Eye Services Private Limited, Nepalgunj, Nepal. ";
        agreement += "Here Mr. Acharya is the owner of the source code of this application and he authorises Eagle Eye to distribute the application in to the market ";
        agreement += "for the mutual benefits.\n The profit generated by the sale of this application will be distributed between ";
        agreement += " Mr. Acharya and Eagle Eye according to the contract between them on date 2018. As long as the contract exists between Eagle Eye and Mr. Acharya ";
        agreement += "Eagle Eye can distribute the source code with their own given brand name. In any case, if the contract breaks or no longer exists between them ";
        agreement += "Eagel Eye either have to remove the source code from their clients and use their own source code or make new contract with Mr. Acharya.";
    }

    virtual ~Cright() {
    }

    Php::Value getversion() const {
        return version;
    }

    void setversion(const Php::Value &value) {
    }

    Php::Value getdeveloper() const {
        return developer;
    }

    void setdeveloper(const Php::Value &value) {
    }

    Php::Value getemail() const {
        return email;
    }

    void setemail(const Php::Value &value) {
    }

    Php::Value getagreement() const {
        return agreement;
    }

    void setagreement(const Php::Value &value) {
    }

    Php::Value getcopyright() const {
        return copyright;
    }

    void setcopyright(const Php::Value &value) {
    }
};